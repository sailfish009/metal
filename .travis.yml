# Copyright Bruno Dutra 2015-2017
# Distributed under the Boost Software License, Version 1.0.
# See accompanying file LICENSE.txt or copy at http://boost.org/LICENSE_1_0.txt

sudo: required
language: cpp

git:
  depth: 1

env:
    global:
      - secure: "DuBGzmeKiWMm5m0+uZhutjzCffB2PbixmuMm3IZWUi7/uAam4PPI37oeqVTIytxxfpgRvfR2ah75eJyU6ab72MBoHxGkHem10RAvhC/vPYbLZu545qfSGatyTI9R6NfERUxi7YIxjs6D8c4D/5k3gMoCbMUkU1Lze1708lknh5U="

    matrix:
      - BOGUS_JOB

addons:
    apt:
        packages: &ubuntu_packages
          - libboost-dev
        sources: &ubuntu_sources
          - ubuntu-toolchain-r-test

matrix:
    exclude:
      - env: BOGUS_JOB

    include:
      - os: linux
        dist: trusty
        env: BUILD_DOC=true

      - os: osx
        env: BUILD_DOC=true

      - os: linux
        dist: trusty
        compiler: g++
        env: CXXVER=4.8
        addons:
            apt:
                packages:
                  - *ubuntu_packages
                  - g++-4.8
                sources: *ubuntu_sources

      - os: linux
        dist: trusty
        compiler: g++
        env: CXXVER=4.9
        addons:
            apt:
                packages:
                  - *ubuntu_packages
                  - g++-4.9
                sources: *ubuntu_sources

      - os: linux
        dist: trusty
        compiler: g++
        env: CXXVER=5
        addons:
            apt:
                packages:
                  - *ubuntu_packages
                  - g++-5
                sources: *ubuntu_sources

      - os: linux
        dist: trusty
        compiler: g++
        env: CXXVER=6
        addons:
            apt:
                packages:
                  - *ubuntu_packages
                  - g++-6
                sources: *ubuntu_sources

      - os: linux
        dist: trusty
        compiler: clang++
        env: CXXVER=3.4
        addons:
            apt:
                packages:
                  - *ubuntu_packages
                  - clang-3.4
                  - libc++-dev
                  - libc++abi-dev
                sources:
                  - *ubuntu_sources
                  - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.4 main'
                    key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

      - os: linux
        dist: trusty
        compiler: clang++
        env: CXXVER=3.5
        addons:
            apt:
                packages:
                  - *ubuntu_packages
                  - clang-3.5
                  - libc++-dev
                  - libc++abi-dev
                sources:
                  - *ubuntu_sources
                  - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.5 main'
                    key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

      - os: linux
        dist: trusty
        compiler: clang++
        env: CXXVER=3.6
        addons:
            apt:
                packages:
                  - *ubuntu_packages
                  - clang-3.6
                  - libc++-dev
                  - libc++abi-dev
                sources:
                  - *ubuntu_sources
                  - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.6 main'
                    key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

      - os: linux
        dist: trusty
        compiler: clang++
        env: CXXVER=3.7
        addons:
            apt:
                packages:
                  - *ubuntu_packages
                  - clang-3.7
                  - libc++-dev
                  - libc++abi-dev
                sources:
                  - *ubuntu_sources
                  - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.7 main'
                    key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

      - os: linux
        dist: trusty
        compiler: clang++
        env: CXXVER=3.8
        addons:
            apt:
                packages:
                  - *ubuntu_packages
                  - clang-3.8
                  - libc++-dev
                  - libc++abi-dev
                sources:
                  - *ubuntu_sources
                  - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.8 main'
                    key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

      - os: linux
        dist: trusty
        compiler: clang++
        env: CXXVER=3.9
        addons:
            apt:
                packages:
                  - *ubuntu_packages
                  - clang-3.9
                  - libc++-dev
                  - libc++abi-dev
                sources:
                  - *ubuntu_sources
                  - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.9 main'
                    key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

      - os: linux
        dist: trusty
        compiler: clang++
        env: CXXVER=4.0
        addons:
            apt:
                packages:
                  - *ubuntu_packages
                  - clang-4.0
                  - libc++-dev
                  - libc++abi-dev
                sources:
                  - *ubuntu_sources
                  - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-4.0 main'
                    key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

      - os: linux
        dist: trusty
        compiler: clang++
        env: CXXVER=5.0
        addons:
            apt:
                packages:
                  - *ubuntu_packages
                  - clang-5.0
                  - libc++-dev
                  - libc++abi-dev
                sources:
                  - *ubuntu_sources
                  - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty main'
                    key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

      - os: osx
        osx_image: xcode6.4

      - os: osx
        osx_image: xcode7.3

      - os: osx
        osx_image: xcode8

      - os: osx
        osx_image: xcode8.1

      - os: osx
        osx_image: xcode8.2

before_install:
  - git config --global user.name "Travis Bot"
  - git config --global user.email "\<\>"

  - METAL_SOURCE_PATH="${TRAVIS_BUILD_DIR}"

  - METAL_BUILD_PATH="${TRAVIS_BUILD_DIR}/build"
  - mkdir -p "${METAL_BUILD_PATH}"

  - DEPS_PATH="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p "${DEPS_PATH}"

install:
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]
    then
        CMAKE_URL="http://www.cmake.org/files/v3.4/cmake-3.4.0-Linux-x86_64.tar.gz"
        mkdir -p "${DEPS_PATH}/cmake" &&
        travis_retry curl -L "${CMAKE_URL}" | tar --strip-components=1 -xz -C "${DEPS_PATH}/cmake"
        export PATH=${DEPS_PATH}/cmake/bin:${PATH}
    else
        CMAKE_URL="http://www.cmake.org/files/v3.4/cmake-3.4.0-Darwin-x86_64.tar.gz"
        mkdir -p "${DEPS_PATH}/cmake" &&
        travis_retry curl -L "${CMAKE_URL}" | tar --strip-components=1 -xz -C "${DEPS_PATH}/cmake"
        export PATH=${DEPS_PATH}/cmake/CMake.app/Contents/bin:${PATH}
    fi

  - |
    if [[ "${BUILD_DOC}" == "true" ]]
    then
        if [[ "${TRAVIS_OS_NAME}" == "linux" ]]
        then
            # download the latest doxygen available
            DOXYGEN_FTP="ftp://ftp.stack.nl/pub/users/dimitri/"
            DOXYGEN_PKG=$(travis_retry curl -Ls "${DOXYGEN_FTP}" | grep -Eo "doxygen-[0-9.]+linux[.]bin[.]tar[.]gz" | sort -V | tail -1)
            DOXYGEN_URL="${DOXYGEN_FTP}/${DOXYGEN_PKG}"
            mkdir -p "${DEPS_PATH}/doxygen" &&
            travis_retry curl -L "${DOXYGEN_URL}" | tar --strip-components=1 -xz -C "${DEPS_PATH}/doxygen"
            export PATH="${DEPS_PATH}/doxygen/bin:${PATH}"
        else
            brew update
            brew unlink doxygen
            brew install doxygen
        fi
    fi

before_script:
  - CMAKE_ARGS=("${METAL_SOURCE_PATH}")

  - |
    if [[ -n "${CXX}" && -n "${CXXVER}" ]]
    then
        CMAKE_ARGS+=("-DCMAKE_CXX_COMPILER=${CXX}-${CXXVER}")
    fi

    CMAKE_ARGS+=("-DCMAKE_CXX_FLAGS=-DMETAL_TEST_GEN_LIMIT=9")

  - (cd "${METAL_BUILD_PATH}" && cmake ${CMAKE_ARGS[@]})

script:
  - |
    if [[ "${BUILD_DOC}" == "true" ]]
    then
        (cd "${METAL_BUILD_PATH}" && make doc) &&
        if [[ "${TRAVIS_BRANCH}" == "master" && "${TRAVIS_PULL_REQUEST}" == "false" && "${TRAVIS_OS_NAME}" == "linux" ]]
        then
            git clone https://brunocodutra:${GITHUB_TOKEN}@github.com/brunocodutra/metal -q --depth 1 --branch=gh-pages "${METAL_BUILD_PATH}/doc/gh-pages" &> /dev/null &&
            cp -r "${METAL_BUILD_PATH}/doc/gh-pages/.git/" "${METAL_BUILD_PATH}/doc/html/" &> /dev/null &&
            git -C "${METAL_BUILD_PATH}/doc/html/" add --all . &> /dev/null &&
            git -C "${METAL_BUILD_PATH}/doc/html/" commit --allow-empty -m "update to $(git -C ${METAL_SOURCE_PATH} rev-parse --short HEAD)" &> /dev/null &&
            git -C "${METAL_BUILD_PATH}/doc/html/" push origin gh-pages &> /dev/null
        fi
    else
        (cd "${METAL_BUILD_PATH}" && ctest --output-on-failure)
    fi
